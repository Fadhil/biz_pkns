- if @advert.user || @advert.consultant
  - disabled = true
- else
  - disabled = false
.row
  .twelve.columns
    = form_for '' do |f|
      %ul
        %li.field
          = f.label t('.select_advert_type'), class: 'control-label'
          .row
            .twelve.columns
              .picker
                = select_tag 'select_advert_type', options_for_select([[t('.course_advert'), 'Course'], [t('.product_advert'), 'Product']], selected: @advert.advert_type || params[:select_advert_type]), onChange: "submit();", disabled: disabled
.row
  .twelve.columns
    = form_for @advert, :html => { :class => 'form-horizontal' } do |f|
      - if params[:select_advert_type] == 'Product' || @advert.advert_type == 'Product'
        %ul
          %li.field
            = f.label t('name'), :class => 'control-label'
            = f.text_field :title, :class => 'text input', disabled: disabled, onKeyUp: "limitText(this, 'warning_text_2', 50);"
            #warning_text_2
              %small 50 Huruf Sahaja
          %li.field
            = f.label t('.content'), :class => 'control-label'
            = f.text_area :content, :class => 'textarea input', disabled: disabled, limit: 140, :rows => 3, onKeyUp: "limitText(this, 'warning_text_1', 140);"
            #warning_text_1
              %small= t('.up_to_140_chars_only')
          - if !f.object.new_record?
            - if !@advert.photo.nil?
              %li.field
                = image_tag(@advert.photo.file)
          = f.fields_for :photo do |p|
            %li.field
              = p.label t('.upload_photo'), class: 'control-label'
              = p.file_field :file, :class => 'file input'
              %small
                = t('image_should_be_this_size')
          %li.field
            .rows
              .six.columns
                = f.label t('advert_start_date'), :class => 'control-label'
                = f.text_field :start_date, :class => 'datepicker input text'
              .six.columns
                = f.label t('advert_end_date'), :class => 'control-label'
                = f.text_field :end_date, :class => 'datepicker input text'
                = f.hidden_field :advert_type, value: 'Product'
                = f.hidden_field :admin_created, value: 1
          %li.field
            - if f.object.new_record?
              %span.medium.pretty.btn.warning
                / = f.submit t('create_advert')
                %button{:onClick => 'submit();'}= t('create_advert')
            - else
              %span.medium.pretty.btn.warning
                / = f.submit t('update')
                %button{:onClick => 'submit();'}= t('update')
            %span.medium.pretty.btn.default
              = link_to t('cancel', :default => t("helpers.links.cancel")), adverts_path
      - else
        %ul
          - if !f.object.new_record?
            - if !@advert.photo.new_record?
              %li.field
                .controls
                  = image_tag(f.object.photo.file)
          = f.fields_for :photo do |p|
            %li.field
              = p.label t('.upload_photo'), class: 'control-label'
              = p.file_field :file, :class => 'file'
              %small
                = t('image_should_be_this_size')
          %li.field
            = f.label t('.select_course'), class: 'control-label'
            .row
              .six.columns
                .picker
                  = select_tag 'advert_program_select', options_for_select(Program.all.map{|a| [a.name, a.id]}), disabled: disabled
              .six.columns
                .picker
                  = select_tag 'advert_course_select', options_for_select(Course.where(program_id: Program.first.id).map{ |a| [a.name,a.id]}), disabled: disabled
          %li.field
            .row
              .six.columns
                = f.label t('advert_start_date'), :class => 'control-label'
                = f.text_field :start_date, :class => 'datepicker input text'
              .six.columns
                = f.label t('advert_end_date'), :class => 'control-label'
                = f.text_field :end_date, :class => 'datepicker input text'
                = f.hidden_field :advert_type, value: 'Course'
                = f.hidden_field :admin_created, value: 1
          %li.field
            - if f.object.new_record?
              %span.medium.pretty.btn.warning
                / = f.submit t('create_advert')
                %button{:onClick => 'submit();'}= t('create_advert')
            - else
              %span.medium.pretty.btn.warning
                / = f.submit t('update')
                %button{:onClick => 'submit();'}= t('update')
              %span.medium.pretty.btn.default
                = link_to t('cancel', :default => t("helpers.links.cancel"))

